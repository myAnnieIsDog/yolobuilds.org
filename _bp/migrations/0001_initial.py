# Generated by Django 5.0.1 on 2024-01-19 07:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fund', models.CharField(blank=True, max_length=4)),
                ('fund_label', models.CharField(blank=True, max_length=55)),
                ('share', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('unit', models.CharField(blank=True, max_length=4)),
                ('unit_label', models.CharField(blank=True, max_length=55)),
                ('unit_description', models.CharField(blank=True, max_length=255)),
                ('cost_center', models.CharField(blank=True, max_length=6)),
                ('gl_account', models.CharField(blank=True, max_length=6)),
                ('cams', models.CharField(blank=True, max_length=9)),
                ('infor_activity', models.CharField(blank=True, max_length=7)),
                ('infor_account', models.CharField(blank=True, max_length=5)),
                ('ledger', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['fund', 'unit', 'cost_center'],
            },
        ),
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.CharField(max_length=25, unique=True)),
                ('full_agency', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'DCS Partner Agency',
                'verbose_name_plural': 'DCS Partner Agencies',
                'ordering': ['agency'],
            },
        ),
        migrations.CreateModel(
            name='Authority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15)),
                ('full_name', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Authorities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=55, unique=True)),
                ('valuation', models.DecimalField(decimal_places=2, default=2000, max_digits=15)),
                ('owner_builder_form', models.BooleanField(default=False, verbose_name='Owner-Builder Form Acknowledgement')),
                ('owner_rep_form', models.BooleanField(default=False, verbose_name="Owner's Authorization of a Representative")),
                ('CSLB_Forms', models.BooleanField(default=False, verbose_name='CSLB License Verification')),
                ('employee_authorization', models.BooleanField(default=False, verbose_name='CSLB Licensed Employer Authorization of Employee to Pull Permits')),
                ('finaled', models.DateTimeField(blank=True, null='True')),
                ('expiration_date', models.DateTimeField(blank=True, help_text='\n        Building Permits expire 12 months after \n        they are issued, except that they are \n        extended for specific reasons in \n        accordance with County policy.\n        ', null=True)),
                ('issued', models.DateTimeField(blank=True, null=True)),
                ('approved', models.DateTimeField(blank=True, null=True)),
                ('received', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_approver', to=settings.AUTH_USER_MODEL)),
                ('expiration_set_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_expirer', to=settings.AUTH_USER_MODEL)),
                ('finaled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_finaler', to=settings.AUTH_USER_MODEL)),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_issuer', to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_receiver', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BP',
                'verbose_name_plural': "BP's",
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='CityStZip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=55)),
                ('zip', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'verbose_name': 'City, State Zip',
                'verbose_name_plural': 'City, State Zip',
                'ordering': ['city', 'zip'],
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=55)),
                ('description', models.TextField(max_length=255)),
            ],
            options={
                'verbose_name': 'Contact Type',
                'verbose_name_plural': 'Contacts Types',
                'ordering': ['description'],
            },
        ),
        migrations.CreateModel(
            name='CycleResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.CharField(max_length=55)),
                ('description', models.CharField(max_length=255)),
                ('causes_review_status', models.CharField(max_length=55)),
            ],
            options={
                'verbose_name': 'Cycle Result Option',
                'verbose_name_plural': 'Cycle Result Options',
                'ordering': ['result'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_code', models.CharField(max_length=25, unique=True)),
                ('department', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Department Options',
                'ordering': ['dept_code'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dist_type', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=55)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city_state_zip', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'ordering': ['district'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(max_length=5, unique=True)),
                ('division', models.CharField(max_length=30, unique=True)),
                ('full_division', models.CharField(max_length=255, unique=True)),
                ('year', models.CharField(default='2024', max_length=55)),
                ('sequence', models.CharField(default='0000', max_length=12)),
            ],
            options={
                'verbose_name': 'Division',
                'verbose_name_plural': 'Divisions',
                'ordering': ['division'],
            },
        ),
        migrations.CreateModel(
            name='FloodZones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_code', models.CharField(max_length=7, verbose_name='Flood Zone Code')),
                ('zone_description', models.CharField(max_length=255, verbose_name='Flood Zone Description')),
            ],
            options={
                'verbose_name': 'Flood Zone',
                'verbose_name_plural': 'Flood Zones',
            },
        ),
        migrations.CreateModel(
            name='InspectionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(blank=True, max_length=55)),
            ],
            options={
                'verbose_name': 'Inspection Group',
                'verbose_name_plural': 'Inspection Groups',
                'ordering': ['group'],
            },
        ),
        migrations.CreateModel(
            name='InspectionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=55, unique=True)),
            ],
            options={
                'verbose_name': 'Inspection Result Option',
                'verbose_name_plural': 'Inspection Result Options',
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jurisdiction', models.CharField(max_length=55)),
            ],
            options={
                'verbose_name': 'Jurisdiction',
                'verbose_name_plural': 'Jurisdictions',
                'ordering': ['jurisdiction'],
            },
        ),
        migrations.CreateModel(
            name='LicenseAgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.CharField(max_length=15, unique=True, verbose_name='Agency Acronym')),
                ('agency_long', models.CharField(max_length=255, unique=True, verbose_name='Agency Full Name')),
            ],
            options={
                'verbose_name': 'License Agency',
                'verbose_name_plural': 'License Agencies',
                'ordering': ['agency'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=55, unique=True)),
                ('policy', models.TextField(max_length=255)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
            },
        ),
        migrations.CreateModel(
            name='ReviewGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=30)),
            ],
            options={
                'ordering': ['group'],
            },
        ),
        migrations.CreateModel(
            name='ReviewStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=55)),
                ('description', models.CharField(max_length=255)),
                ('color', models.CharField(max_length=55)),
            ],
            options={
                'verbose_name': 'Review Status Option',
                'verbose_name_plural': 'Review Status Options',
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=30, unique=True)),
                ('policy', models.CharField(max_length=255)),
                ('build', models.BooleanField(default=False)),
                ('occupy', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuses',
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=100, unique=True)),
                ('policy', models.TextField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['tag'],
            },
        ),
        migrations.CreateModel(
            name='TripResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfConstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=7)),
                ('description', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='UseGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=7)),
                ('description', models.CharField(max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=15)),
                ('full_title', models.CharField(blank=True, max_length=255)),
                ('authority', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='chapter', to='builder.authority')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=55)),
                ('title', models.CharField(blank=True, max_length=55)),
                ('full_title', models.CharField(blank=True, max_length=255)),
                ('code', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='chapter', to='builder.code')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=7, default=1.0, max_digits=20)),
                ('amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=15)),
                ('balance', models.DecimalField(decimal_places=2, default=1000000, max_digits=15)),
                ('notes', models.TextField(max_length=255)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bp_fee', to='builder.bp')),
            ],
        ),
        migrations.CreateModel(
            name='ClaritiFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clariti_fee_code', models.CharField(blank=True, max_length=255, null=True)),
                ('tech', models.CharField(blank=True, max_length=255, null=True)),
                ('clariti_description', models.CharField(blank=True, max_length=255, null=True)),
                ('clariti_formula', models.CharField(blank=True, max_length=255, null=True)),
                ('clariti_id', models.CharField(blank=True, max_length=255, null=True)),
                ('clariti_main_fee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clariti_fee', to='builder.fee')),
            ],
            options={
                'verbose_name': 'Fee/Payment (Clariti)',
                'verbose_name_plural': 'Fees/Payments (Clariti)',
                'ordering': ['clariti_main_fee'],
            },
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_group', models.CharField(max_length=255)),
                ('fee_name', models.CharField(max_length=255, unique=True)),
                ('policy', models.TextField(blank=True, max_length=1000)),
                ('authorization', models.CharField(blank=True, max_length=255)),
                ('adopted', models.DateField(blank=True, null=True)),
                ('revised', models.DateField(blank=True, null=True)),
                ('expires', models.DateField(blank=True, null=True)),
                ('tier_base_qty', models.DecimalField(decimal_places=0, default=0, max_digits=15)),
                ('tier_base_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('rate', models.FloatField(default=5000000)),
                ('units', models.CharField(default='each', max_length=255)),
                ('rate_check', models.CharField(blank=True, max_length=255)),
                ('active', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('fee_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='acct', to='builder.account')),
            ],
            options={
                'verbose_name': 'Fee Type',
                'verbose_name_plural': 'Fee Types',
                'ordering': ['fee_name'],
            },
        ),
        migrations.AddField(
            model_name='fee',
            name='fee_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.feetype'),
        ),
        migrations.CreateModel(
            name='InspectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_type', models.CharField(max_length=255)),
                ('duration_hours', models.DecimalField(decimal_places=1, default=0.3, max_digits=3)),
                ('trip_factor', models.DecimalField(decimal_places=2, default=1.2, max_digits=7)),
                ('inspection_checklist', models.TextField(blank=True)),
                ('default_inspector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('insp_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.inspectiongroup')),
            ],
            options={
                'verbose_name': 'Inspection Type',
                'verbose_name_plural': 'Inspection Types',
                'ordering': ['insp_group', 'inspection_type'],
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_time_allotted', models.DecimalField(decimal_places=1, max_digits=7)),
                ('staff_time_actual', models.DecimalField(decimal_places=1, max_digits=7)),
                ('record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='inspection', to='builder.bp')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.inspectionstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inspection', to='builder.inspectiontype')),
            ],
            options={
                'verbose_name': 'Inspection',
                'verbose_name_plural': 'Inspections',
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='LicenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_short', models.CharField(max_length=7, unique=True, verbose_name='Licens Type')),
                ('license_long', models.CharField(max_length=255, unique=True, verbose_name='Licens Type')),
                ('licensing_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.licenseagency')),
            ],
            options={
                'verbose_name': 'License Type',
                'verbose_name_plural': 'License Types',
                'ordering': ['license_short'],
            },
        ),
        migrations.CreateModel(
            name='Parcel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book', models.CharField(default='000', max_length=3)),
                ('page', models.CharField(default='000', max_length=3)),
                ('parcel', models.CharField(default='000', max_length=3)),
                ('active', models.BooleanField(default=True)),
                ('owner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_address', models.CharField(blank=True, max_length=100, null=True)),
                ('land_use_zone', models.CharField(default='A-N', max_length=10)),
                ('wui_sra', models.BooleanField()),
                ('wui_lra', models.BooleanField()),
                ('wui_risk', models.DecimalField(decimal_places=0, default=0, max_digits=1)),
                ('wui_regulations', models.BooleanField()),
                ('flood_a', models.BooleanField()),
                ('flood_ae', models.BooleanField()),
                ('flood_ao', models.BooleanField()),
                ('flood_x', models.BooleanField()),
                ('floodway', models.BooleanField()),
                ('districts', models.ManyToManyField(blank=True, to='builder.district')),
                ('jurisdiction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.jurisdiction')),
                ('parcels', models.ManyToManyField(blank=True, to='builder.parcel')),
            ],
            options={
                'verbose_name': 'Parcel',
                'verbose_name_plural': 'Parcels',
                'ordering': ['book', 'page', 'parcel'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first', models.CharField(blank=True, max_length=255, verbose_name='First Name')),
                ('last', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('company', models.CharField(blank=True, max_length=255, verbose_name='Company Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=255)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('zip', models.CharField(blank=True, max_length=10)),
                ('is_reviewer', models.BooleanField(default=False)),
                ('is_inspector', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['first', 'last'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('check_number', models.CharField(blank=True, max_length=255, null=True)),
                ('receipt_number', models.PositiveSmallIntegerField(null=True)),
                ('deposit', models.BooleanField(default=False)),
                ('refund', models.BooleanField(default=False)),
                ('notes', models.TextField(max_length=255)),
                ('collected_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('fees', models.ManyToManyField(to='builder.fee')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.paymentmethod')),
                ('paid_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.profile')),
            ],
        ),
        migrations.CreateModel(
            name='LicenseHolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=255, unique=True)),
                ('expiration_date', models.DateField()),
                ('verified_valid', models.BooleanField()),
                ('bl_number', models.CharField(blank=True, max_length=40, verbose_name='Yolo County Business License Number')),
                ('license_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.licensetype')),
                ('license_holder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.profile')),
            ],
            options={
                'ordering': ['license_holder', 'license_type'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.contacttype')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.profile')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
                'ordering': ['contact'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coa', models.TextField(max_length=255, verbose_name='Conditions of Approval')),
                ('staff_time_allotted', models.DecimalField(decimal_places=1, max_digits=7)),
                ('staff_time_actual', models.DecimalField(decimal_places=1, max_digits=7)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review', to='builder.bp')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.reviewstatus')),
            ],
            options={
                'ordering': ['record', 'type', 'status'],
            },
        ),
        migrations.CreateModel(
            name='ReviewCycle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle', models.PositiveSmallIntegerField(default=1)),
                ('reviewer', models.CharField(max_length=100, null=True)),
                ('completed_date', models.DateTimeField(null=True)),
                ('due', models.DateTimeField(null=True)),
                ('sent', models.DateTimeField(null=True)),
                ('notes', models.TextField(max_length=255)),
                ('staff_time_actual', models.DecimalField(decimal_places=1, max_digits=7)),
                ('days_until_due', models.DurationField(null=True)),
                ('age', models.DurationField(null=True)),
                ('days_allotted', models.DurationField(null=True)),
                ('result', models.ForeignKey(default='In Progress', on_delete=django.db.models.deletion.PROTECT, to='builder.cycleresult')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cycle', to='builder.review')),
            ],
            options={
                'verbose_name': 'Review Cycle',
                'verbose_name_plural': 'Review Cycles',
                'ordering': ['review'],
            },
        ),
        migrations.CreateModel(
            name='ReviewType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_type', models.CharField(max_length=30)),
                ('days_cycle1', models.PositiveSmallIntegerField(default=15)),
                ('days_cycle2', models.PositiveSmallIntegerField(default=5)),
                ('review_checklist', models.TextField(blank=True, verbose_name='Review Checklist')),
                ('default_reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='default_reviewer_for', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Review Type',
                'verbose_name_plural': 'Review Types',
                'ordering': ['review_type'],
            },
        ),
        migrations.AddField(
            model_name='review',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='review', to='builder.reviewtype'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=55)),
                ('title', models.CharField(blank=True, max_length=55)),
                ('full_title', models.CharField(blank=True, max_length=255)),
                ('chapter', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='section', to='builder.chapter')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=55)),
                ('text', models.CharField(blank=True, max_length=255)),
                ('answer', models.CharField(blank=True, max_length=255)),
                ('section', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='requirement', to='builder.section')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='SiteAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default='12345', max_length=10)),
                ('street', models.CharField(default='County Road 98', max_length=50)),
                ('geolocation', models.CharField(blank=True, max_length=50, null=True)),
                ('city_st_zip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.citystzip', verbose_name='City, State, Zip')),
                ('parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.parcel')),
            ],
            options={
                'verbose_name': 'Site Address',
                'verbose_name_plural': 'Site Addresses',
                'ordering': ['number', 'street', 'city_st_zip'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supervisor', models.CharField(blank=True, max_length=255, null=True)),
                ('supervisor_email', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.department')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.division')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='staff_profile', to='builder.profile')),
            ],
            options={
                'verbose_name': 'Staff Member',
                'verbose_name_plural': 'Staff Members',
                'ordering': ['department', 'division', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='TrakitFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trakit_fee_code', models.CharField(blank=True, max_length=255, null=True)),
                ('tech', models.CharField(blank=True, max_length=255, null=True)),
                ('trakit_description', models.CharField(blank=True, max_length=255, null=True)),
                ('trakit_formula', models.CharField(blank=True, max_length=255, null=True)),
                ('trakit_id', models.CharField(blank=True, max_length=255, null=True)),
                ('trakit_main_fee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trakit_fee', to='builder.fee')),
            ],
            options={
                'verbose_name': 'Fee/Payment (Trakit)',
                'verbose_name_plural': 'Fees/Payments (Trakit)',
                'ordering': ['trakit_main_fee'],
            },
        ),
        migrations.CreateModel(
            name='InspectionTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_number', models.PositiveSmallIntegerField(default=0)),
                ('resulted', models.DateTimeField(null=True)),
                ('inspector', models.CharField(blank=True, max_length=100, null=True)),
                ('time_allotted', models.DecimalField(decimal_places=1, max_digits=7)),
                ('time_actual', models.DecimalField(decimal_places=1, max_digits=7)),
                ('time_delta', models.DecimalField(decimal_places=1, max_digits=7)),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('requested_by', models.CharField(blank=True, max_length=100, null=True)),
                ('requested_date', models.DateField()),
                ('requested_notes', models.CharField(blank=True, max_length=256, null=True)),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trip', to='builder.inspection')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.tripresult')),
            ],
            options={
                'verbose_name': 'Inspection Trip',
                'verbose_name_plural': 'Inspection Trips',
                'ordering': ['inspection', 'trip_number'],
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, max_length=7, null=True)),
                ('type', models.CharField(blank=True, max_length=55, null=True)),
                ('policy', models.CharField(blank=True, max_length=255, null=True)),
                ('suffix', models.CharField(blank=True, max_length=7, null=True)),
                ('default_fees', models.ManyToManyField(blank=True, to='builder.feetype')),
                ('default_inspection', models.ManyToManyField(blank=True, to='builder.inspectiontype')),
                ('default_reviews', models.ManyToManyField(blank=True, to='builder.reviewtype')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.division')),
            ],
            options={
                'verbose_name': 'Type',
                'verbose_name_plural': 'Types',
                'ordering': ['type'],
            },
        ),
        migrations.AddField(
            model_name='bp',
            name='type_of_construction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_type_of_const', to='builder.typeofconstruction'),
        ),
        migrations.AddField(
            model_name='bp',
            name='use_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_use', to='builder.usegroup'),
        ),
        migrations.CreateModel(
            name='YoloCountyPartners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('alt_contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.agency')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='builder.profile')),
            ],
            options={
                'verbose_name': 'DCS Partner',
                'verbose_name_plural': 'DCS Partners',
                'ordering': ['agency', 'profile'],
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('accessory_utility_new_area', models.PositiveIntegerField(default=0)),
                ('residential_dwelling_new_units', models.PositiveIntegerField(default=0)),
                ('residential_dwelling_new_area', models.PositiveIntegerField(default=0)),
                ('assembly_new_area', models.PositiveIntegerField(default=0)),
                ('office_new_area', models.PositiveIntegerField(default=0)),
                ('processing_or_production_new_area', models.PositiveIntegerField(default=0)),
                ('warehouse_new_area', models.PositiveIntegerField(default=0)),
                ('retail_new_area', models.PositiveIntegerField(default=0)),
                ('other_new_area', models.PositiveIntegerField(default=0)),
                ('other_description', models.PositiveIntegerField(default=0)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'New Building/Structure',
                'verbose_name_plural': 'New Buildings/Structures',
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Demolition',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('type_of_structure', models.CharField(blank=True, max_length=55, null=True)),
                ('demolition_area', models.CharField(max_length=55)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Demolition Permits',
                'verbose_name_plural': 'Demolition Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Electrical',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('service_changeout', models.BooleanField(default=False)),
                ('service_phases', models.PositiveIntegerField(default=1)),
                ('service_voltage', models.CharField(default='120/240 V', max_length=255)),
                ('service_current', models.PositiveIntegerField(default=150, help_text='A')),
                ('serving', models.CharField(default='A Single Residential Dwelling Unit', max_length=255)),
                ('general_lighting_and_receptacles', models.PositiveIntegerField(blank=True, help_text='Square feet of the area served')),
                ('pv_solar_roof', models.PositiveIntegerField(blank=True, help_text='kW ac')),
                ('solarAPP', models.BooleanField(default=False)),
                ('pv_solar_ground', models.PositiveIntegerField(blank=True, help_text='kW ac')),
                ('ess_current', models.PositiveIntegerField(blank=True, help_text='24 A')),
                ('ess_capacity', models.PositiveIntegerField(blank=True, help_text='14 kWh')),
                ('evcs', models.PositiveIntegerField(blank=True, help_text='24 A')),
                ('generator_power', models.PositiveIntegerField(blank=True, help_text='14 kWh')),
                ('generator_fuel', models.CharField(default='Propane', max_length=255)),
                ('motor_loads', models.PositiveIntegerField(blank=True)),
                ('review_days', models.PositiveIntegerField(default=10)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Electrical Permit',
                'verbose_name_plural': 'Electrical Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Existing',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('existing_building_area', models.PositiveSmallIntegerField(default=0, verbose_name='Existing Building Area (square feet)')),
                ('addition_area', models.PositiveSmallIntegerField(default=0)),
                ('addition_use', models.CharField(default='R-3 Residential Dwelling', max_length=255)),
                ('alteration_area', models.PositiveSmallIntegerField(default=0)),
                ('alteration_use', models.CharField(default='R-3 Residential Dwelling', max_length=255)),
                ('reroof_area', models.PositiveIntegerField(default=0)),
                ('reroof_fire_class', models.CharField(max_length=1)),
                ('reroof_cool_roof', models.BooleanField(default=False)),
                ('ext_wall_replacement_type', models.CharField(default='Stucco', max_length=255)),
                ('ext_wall_replacement_area', models.PositiveSmallIntegerField(default=0)),
                ('ext_wall_replacement_fire_class', models.CharField(max_length=1)),
                ('window_replacement_quantity', models.PositiveSmallIntegerField(default=0)),
                ('window_replacement_like_for_like_area', models.PositiveSmallIntegerField(default=0)),
                ('window_replacement_new_area', models.PositiveSmallIntegerField(default=0)),
                ('window_replacement_cf1r', models.BooleanField(default=False)),
                ('window_replacement_hazardous_locations', models.BooleanField(default=False)),
                ('existing_type_of_construction', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.typeofconstruction')),
                ('existing_use', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.usegroup')),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Existing Building Code Permit',
                'verbose_name_plural': 'Existing Building Code Permits',
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Fire',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('sprinkler_heads', models.PositiveIntegerField(default=20)),
                ('sprinkler_area', models.PositiveIntegerField(default=2000)),
                ('new_alarm_system', models.BooleanField(verbose_name=False)),
                ('fire_detectors', models.PositiveIntegerField(default=20)),
                ('hazardous_material', models.BooleanField(verbose_name=False)),
                ('high_piled_combustible_storage', models.BooleanField(verbose_name=False)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Fire Protection Permits',
                'verbose_name_plural': 'Fire Protection Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Flood',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('bfe', models.PositiveIntegerField(null=True)),
                ('design_depth', models.PositiveIntegerField(null=True)),
                ('FEMA_defined_structure', models.BooleanField(null=True)),
                ('substantial_improvement', models.BooleanField(null=True)),
                ('variance', models.BooleanField(null=True)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='builder.floodzones')),
            ],
            options={
                'verbose_name': 'Flood Protection Permits',
                'verbose_name_plural': 'Flood Protection Permits',
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Grading',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('purpose', models.CharField(max_length=20, null=True)),
                ('disturbed_area', models.PositiveIntegerField(default=1000)),
                ('max_cut_depth', models.PositiveIntegerField(default=3)),
                ('max_cut_slope', models.PositiveIntegerField(default=3)),
                ('max_fill_height', models.PositiveIntegerField(default=3)),
                ('max_fill_slope', models.PositiveIntegerField(default=3)),
                ('geotech_report', models.BooleanField(default=True)),
                ('special_inspection', models.BooleanField(default=True)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Grading Permits',
                'verbose_name_plural': 'Grading Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Mechanical',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('equipment_units', models.PositiveIntegerField(default=1)),
                ('hvac_units', models.PositiveIntegerField(default=1)),
                ('hvac_type', models.CharField(default='Split', max_length=255)),
                ('hvac_capacity', models.PositiveIntegerField(default=2)),
                ('length_of_ductwork', models.PositiveIntegerField(default=0)),
                ('process_piping', models.PositiveIntegerField(default=1)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Mechanical Permits',
                'verbose_name_plural': 'Mechanical Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Plumbing',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('general_fixtures', models.PositiveIntegerField(default=1000)),
                ('water_supply_service', models.PositiveIntegerField(default=100)),
                ('waste_water_service', models.PositiveIntegerField(default=100)),
                ('sewer_diameter', models.PositiveIntegerField(blank=True)),
                ('sewer_material', models.CharField(help_text='ABS', max_length=55)),
                ('sewer_trenchless', models.BooleanField(default=False)),
                ('wh_type', models.CharField(default='Heat Pump', max_length=255)),
                ('wh_capacity', models.PositiveIntegerField(default=50)),
                ('fuel', models.CharField(help_text='Propane', max_length=55)),
                ('fuel_gas_appliance', models.PositiveIntegerField(default=1000)),
                ('fuel_gas_pipe_length', models.PositiveIntegerField(blank=True)),
                ('fuel_gas_pipe_diameter', models.PositiveIntegerField(blank=True)),
                ('fuel_gas_pipe_material', models.CharField(help_text='Metal', max_length=55)),
                ('propane_capacity', models.PositiveIntegerField(blank=True)),
                ('propane_underground', models.BooleanField(default=False)),
                ('propane_setback_to_structures', models.PositiveIntegerField(blank=True)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Plumbing Permits',
                'verbose_name_plural': 'Plumbing Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('bp_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='builder.bp')),
                ('public', models.BooleanField(default=False)),
                ('area', models.PositiveIntegerField(blank=True, verbose_name='Area (square feet)')),
                ('depth', models.PositiveIntegerField(blank=True, verbose_name='Depth (feet)')),
                ('enclosure', models.BooleanField(default=False)),
                ('structural', models.BooleanField(default=False)),
                ('accessibility', models.BooleanField(default=False)),
                ('record_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.type')),
            ],
            options={
                'verbose_name': 'Pool/Spa Permits',
                'verbose_name_plural': 'Pool/Spa Permits',
                'ordering': ['number'],
            },
            bases=('builder.bp',),
        ),
        migrations.CreateModel(
            name='Restriction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy', models.CharField(blank=True, max_length=255, null=True)),
                ('lock', models.BooleanField(default=False, verbose_name='Lock this record?')),
                ('lock_related', models.BooleanField(default=False, verbose_name='Lock related records?')),
                ('alert', models.BooleanField(default=True, verbose_name='Popup notification on this record?')),
                ('alert_related', models.BooleanField(default=False, verbose_name='Popup notification on related records?')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='builder.tag')),
            ],
            options={
                'verbose_name': 'Restriction',
                'verbose_name_plural': 'Restrictions',
                'ordering': ['tag'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='builder_res_content_d40316_idx')],
            },
        ),
    ]
